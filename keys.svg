<?xml version="1.0" encoding="UTF-8"?>
<svg width="925" height="657.9" version="1.1" viewBox="0 0 925 657.9" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Keyboard Keys</title>
 <defs>
  <marker id="Triangle" overflow="visible" markerHeight="1" markerWidth="1" orient="auto-start-reverse" preserveAspectRatio="xMidYMid" viewBox="0 0 1 1">
   <path transform="scale(.5)" d="m5.77 0-8.65 5v-10z" fill="context-stroke" fill-rule="evenodd" stroke="context-stroke" stroke-width="1pt"/>
  </marker>
  <linearGradient id="linearGradient3165">
   <stop stop-color="#d7d7d7" offset="0"/>
   <stop stop-color="#e7e7e7" offset=".5"/>
   <stop stop-color="#d7d7d7" offset="1"/>
  </linearGradient>
  <linearGradient id="linearGradient3141">
   <stop stop-color="#d8d8d8" offset="0"/>
   <stop stop-color="#a3a3a3" offset="1"/>
  </linearGradient>
  <linearGradient id="linearGradient2905" x1="168.6" x2="168.6" y1="200.4" y2="384.3" gradientUnits="userSpaceOnUse" xlink:href="#linearGradient3141"/>
  <linearGradient id="linearGradient2907" x1="90.59" x2="250.2" y1="292.4" y2="292.4" gradientTransform="matrix(.8317 0 0 .8368 27.65 44.99)" gradientUnits="userSpaceOnUse" xlink:href="#linearGradient3165"/>
  <linearGradient id="linearGradient12" x1="168.6" x2="168.6" y1="200.4" y2="384.3" gradientUnits="userSpaceOnUse">
   <stop stop-color="#d8d8d8" offset="0"/>
   <stop stop-color="#a3a3a3" offset="1"/>
  </linearGradient>
  <linearGradient id="linearGradient13" x1="90.59" x2="250.2" y1="292.4" y2="292.4" gradientTransform="matrix(.8317 0 0 .8368 27.65 44.99)" gradientUnits="userSpaceOnUse">
   <stop stop-color="#d7d7d7" offset="0"/>
   <stop stop-color="#e7e7e7" offset=".5"/>
   <stop stop-color="#d7d7d7" offset="1"/>
  </linearGradient>
  <radialGradient id="radialGradient15" cx="416.1" cy="890.2" r="462.5" gradientTransform="matrix(1 0 0 .7112 0 257.1)" gradientUnits="userSpaceOnUse">
   <stop stop-color="#29c252" offset="0"/>
   <stop stop-color="#166b2d" offset="1"/>
  </radialGradient>
 </defs>
 <g transform="translate(46.45 -561.2)">
  <path d="m-38.7 569h909.5v642.4h-909.5z" fill="url(#radialGradient15)" stroke="#b3b3b3" stroke-linejoin="round" stroke-width="15.5"/>
  <g fill="#000000" font-family="Verdana">
   <text transform="translate(39.77 519.7)" style="shape-inside:url(#rect1);white-space:pre" xml:space="preserve"/>
   <text transform="translate(39.77 519.7)" style="shape-inside:url(#rect2);white-space:pre" xml:space="preserve"/>
   <text transform="translate(39.77 519.7)" style="shape-inside:url(#rect3);white-space:pre" xml:space="preserve"/>
   <text transform="translate(39.77 519.7)" font-size="106.7px" style="shape-inside:url(#rect4);white-space:pre" xml:space="preserve"/>
  </g>
  <g transform="translate(-89.1 584)" fill-rule="evenodd">
   <path d="m92.86 200.9h151.4c11.87 0 21.43 9.557 21.43 21.43v140c0 11.87-9.557 21.43-21.43 21.43h-151.4c-11.87 0-21.43-9.557-21.43-21.43v-140c0-11.87 9.557-21.43 21.43-21.43z" fill="url(#linearGradient2905)" stroke="#8d8d8d" stroke-width="1px"/>
   <path d="m105 213.1h125.7c9.934 0 17.93 7.998 17.93 17.93v117.2c0 9.934-7.998 17.93-17.93 17.93h-125.7c-9.934 0-17.93-7.998-17.93-17.93v-117.2c0-9.934 7.998-17.93 17.93-17.93z" fill="url(#linearGradient2907)" stroke="#f8f8f8" stroke-width=".8343px"/>
  </g>
  <path transform="translate(-7.47 758.5)" d="m121.3 154h-10.99l-7.604-21.61h-33.54l-7.604 21.61h-10.47l28.23-77.55h13.75zm-21.77-30.47-13.59-38.07-13.65 38.07z" fill="#4d4d4d" style="white-space:pre"/>
  <g transform="translate(310.9 584)" fill-rule="evenodd">
   <path d="m92.86 200.9h151.4c11.87 0 21.43 9.557 21.43 21.43v140c0 11.87-9.557 21.43-21.43 21.43h-151.4c-11.87 0-21.43-9.557-21.43-21.43v-140c0-11.87 9.557-21.43 21.43-21.43z" fill="url(#linearGradient2905)" stroke="#8d8d8d" stroke-width="1px"/>
   <path d="m105 213.1h125.7c9.934 0 17.93 7.998 17.93 17.93v117.2c0 9.934-7.998 17.93-17.93 17.93h-125.7c-9.934 0-17.93-7.998-17.93-17.93v-117.2c0-9.934 7.998-17.93 17.93-17.93z" fill="url(#linearGradient2907)" stroke="#f8f8f8" stroke-width=".8343px"/>
  </g>
  <path d="m511.5 873.7q0 10.57-4.635 19.17-4.583 8.594-12.24 13.33-5.313 3.281-11.88 4.74-6.51 1.458-17.19 1.458h-19.58v-77.55h19.38q11.35 0 18.02 1.667 6.719 1.615 11.35 4.479 7.917 4.948 12.34 13.18t4.427 19.53zm-10.78-0.1562q0-9.115-3.177-15.36t-9.479-9.844q-4.583-2.604-9.74-3.594-5.156-1.042-12.34-1.042h-9.688v59.84h9.688q7.448 0 12.97-1.094 5.573-1.094 10.21-4.063 5.781-3.698 8.646-9.74 2.917-6.042 2.917-15.1z" fill="#4d4d4d"/>
  <g stroke-linejoin="round" stroke-width="20">
   <text x="156.22958" y="856.98297" fill="#ffffff" font-family="Verdana" font-size="106.7px" stroke="#b3b3b3" xml:space="preserve"><tspan x="156.22958" y="856.98297"/></text>
   <g transform="translate(30.16 610.5)" fill="#ccc" style="white-space:pre">
    <path d="m614.4 149q0 3.172-1.495 6.271-1.458 3.099-4.12 5.25-2.917 2.333-6.818 3.646-3.865 1.312-9.333 1.312-5.87 0-10.57-1.094-4.667-1.094-9.516-3.245v-9.042h0.5104q4.12 3.427 9.516 5.286 5.396 1.859 10.14 1.859 6.708 0 10.43-2.516 3.755-2.516 3.755-6.708 0-3.609-1.786-5.323-1.75-1.714-5.359-2.661-2.734-0.7292-5.943-1.203-3.172-0.474-6.745-1.203-7.219-1.531-10.72-5.214-3.464-3.719-3.464-9.661 0-6.818 5.76-11.16 5.76-4.375 14.62-4.375 5.724 0 10.5 1.094 4.776 1.094 8.458 2.698v8.531h-0.5104q-3.099-2.625-8.167-4.339-5.031-1.75-10.32-1.75-5.797 0-9.333 2.406-3.5 2.406-3.5 6.198 0 3.391 1.75 5.323t6.161 2.953q2.333 0.5104 6.635 1.24 4.302 0.7292 7.292 1.495 6.052 1.604 9.115 4.849 3.062 3.245 3.062 9.078zm61.54-25.23-10.61 40.72h-6.344l-10.46-31.39-10.39 31.39h-6.307l-10.72-40.72h7.146l7.474 31.54 10.17-31.54h5.651l10.43 31.54 7.073-31.54zm17.24-6.818h-7.729v-7.109h7.729zm-0.4375 47.54h-6.854v-40.72h6.854zm34.71-0.3646q-1.932 0.5104-4.229 0.8385-2.26 0.3281-4.047 0.3281-6.234 0-9.479-3.354t-3.245-10.76v-21.66h-4.63v-5.76h4.63v-11.7h6.854v11.7h14.15v5.76h-14.15v18.56q0 3.208 0.1458 5.031 0.1458 1.786 1.021 3.354 0.8021 1.458 2.188 2.151 1.422 0.6562 4.302 0.6562 1.677 0 3.5-0.474 1.823-0.5104 2.625-0.8385h0.3646zm38.39-2.188q-3.427 1.641-6.526 2.552-3.062 0.9115-6.526 0.9115-4.411 0-8.094-1.276-3.682-1.312-6.307-3.938-2.661-2.625-4.12-6.635t-1.458-9.37q0-9.99 5.469-15.68 5.505-5.688 14.51-5.688 3.5 0 6.854 0.9844 3.391 0.9844 6.198 2.406v7.62h-0.3646q-3.135-2.443-6.49-3.755-3.318-1.312-6.49-1.312-5.833 0-9.224 3.938-3.354 3.901-3.354 11.48 0 7.365 3.281 11.34 3.318 3.938 9.297 3.938 2.078 0 4.229-0.5469 2.151-0.5469 3.865-1.422 1.495-0.7656 2.807-1.604 1.312-0.875 2.078-1.495h0.3646zm42.84 2.552h-6.854v-23.19q0-2.807-0.3281-5.25-0.3281-2.479-1.203-3.865-0.9114-1.531-2.625-2.26-1.714-0.7656-4.448-0.7656-2.807 0-5.87 1.385t-5.87 3.536v30.41h-6.854v-56.73h6.854v20.53q3.208-2.661 6.635-4.156 3.427-1.495 7.036-1.495 6.599 0 10.06 3.974 3.464 3.974 3.464 11.45z"/>
    <path d="m645.9 239.1h-9.37l-18.16-21.58h-10.17v21.58h-7.219v-54.29h15.2q4.922 0 8.203 0.6562 3.281 0.6198 5.906 2.26 2.953 1.859 4.594 4.703 1.677 2.807 1.677 7.146 0 5.87-2.953 9.844-2.953 3.938-8.13 5.943zm-16.88-39.01q0-2.333-0.8385-4.12-0.8021-1.823-2.698-3.062-1.568-1.057-3.719-1.458-2.151-0.4375-5.068-0.4375h-8.495v20.49h7.292q3.427 0 5.979-0.5833 2.552-0.6198 4.339-2.26 1.641-1.531 2.406-3.5 0.8021-2.005 0.8021-5.068zm56.22 18.67q0 9.953-5.104 15.71-5.104 5.76-13.67 5.76-8.641 0-13.74-5.76-5.068-5.76-5.068-15.71t5.068-15.71q5.104-5.797 13.74-5.797 8.568 0 13.67 5.797 5.104 5.76 5.104 15.71zm-7.073 0q0-7.911-3.099-11.74-3.099-3.865-8.604-3.865-5.578 0-8.677 3.865-3.062 3.828-3.062 11.74 0 7.656 3.099 11.63 3.099 3.938 8.641 3.938 5.469 0 8.568-3.901 3.135-3.938 3.135-11.67zm68.91-20.38-10.61 40.72h-6.344l-10.46-31.39-10.39 31.39h-6.307l-10.72-40.72h7.146l7.474 31.54 10.17-31.54h5.651l10.43 31.54 7.073-31.54zm38.97 28.98q0 5.578-4.63 9.151-4.594 3.573-12.58 3.573-4.521 0-8.313-1.057-3.755-1.094-6.307-2.37v-7.693h0.3646q3.245 2.443 7.219 3.901 3.974 1.422 7.62 1.422 4.521 0 7.073-1.458 2.552-1.458 2.552-4.594 0-2.406-1.385-3.646-1.385-1.24-5.323-2.115-1.458-0.3281-3.828-0.7656-2.333-0.4375-4.266-0.9479-5.359-1.422-7.62-4.156-2.224-2.771-2.224-6.781 0-2.516 1.021-4.74 1.057-2.224 3.172-3.974 2.042-1.714 5.177-2.698 3.172-1.021 7.073-1.021 3.646 0 7.365 0.9115 3.755 0.875 6.234 2.151v7.328h-0.3646q-2.625-1.932-6.38-3.245-3.755-1.349-7.365-1.349-3.755 0-6.344 1.458-2.589 1.422-2.589 4.266 0 2.516 1.568 3.792 1.531 1.276 4.958 2.078 1.896 0.4375 4.229 0.875 2.37 0.4375 3.938 0.8021 4.776 1.094 7.365 3.755 2.589 2.698 2.589 7.146z"/>
   </g>
   <path transform="translate(30.87 510.8)" d="m585.6 599.8h-9.37l-18.16-21.58h-10.17v21.58h-7.219v-54.29h15.2q4.922 0 8.203 0.6562 3.281 0.6198 5.906 2.26 2.953 1.859 4.594 4.703 1.677 2.807 1.677 7.146 0 5.87-2.953 9.844-2.953 3.938-8.13 5.943zm-16.88-39.01q0-2.333-0.8385-4.12-0.8021-1.823-2.698-3.062-1.568-1.057-3.719-1.458-2.151-0.4375-5.068-0.4375h-8.495v20.49h7.292q3.427 0 5.979-0.5833 2.552-0.6198 4.339-2.26 1.641-1.531 2.406-3.5 0.8021-2.005 0.8021-5.068zm55.6 19.36h-30.01q0 3.755 1.13 6.562 1.13 2.771 3.099 4.557 1.896 1.75 4.484 2.625 2.625 0.875 5.76 0.875 4.156 0 8.349-1.641 4.229-1.677 6.016-3.281h0.3646v7.474q-3.464 1.458-7.073 2.443-3.609 0.9844-7.583 0.9844-10.14 0-15.82-5.469-5.688-5.505-5.688-15.6 0-9.99 5.432-15.86 5.469-5.87 14.36-5.87 8.24 0 12.69 4.813 4.484 4.812 4.484 13.67zm-6.672-5.25q-0.0365-5.396-2.734-8.349-2.661-2.953-8.13-2.953-5.505 0-8.786 3.245-3.245 3.245-3.682 8.057zm46.16 13.16q0 5.578-4.63 9.151-4.594 3.573-12.58 3.573-4.521 0-8.313-1.057-3.755-1.094-6.307-2.37v-7.693h0.3646q3.245 2.443 7.219 3.901 3.974 1.422 7.62 1.422 4.521 0 7.073-1.458 2.552-1.458 2.552-4.594 0-2.406-1.385-3.646-1.385-1.24-5.323-2.115-1.458-0.3281-3.828-0.7656-2.333-0.4375-4.266-0.9479-5.359-1.422-7.62-4.156-2.224-2.771-2.224-6.781 0-2.516 1.021-4.74 1.057-2.224 3.172-3.974 2.042-1.714 5.177-2.698 3.172-1.021 7.073-1.021 3.646 0 7.365 0.9115 3.755 0.875 6.234 2.151v7.328h-0.3646q-2.625-1.932-6.38-3.245-3.755-1.349-7.365-1.349-3.755 0-6.344 1.458-2.589 1.422-2.589 4.266 0 2.516 1.568 3.792 1.531 1.276 4.958 2.078 1.896 0.4375 4.229 0.875 2.37 0.4375 3.938 0.8021 4.776 1.094 7.365 3.755 2.589 2.698 2.589 7.146zm30.95 11.38q-1.932 0.5104-4.229 0.8385-2.26 0.3281-4.047 0.3281-6.234 0-9.479-3.354-3.245-3.354-3.245-10.76v-21.66h-4.63v-5.76h4.63v-11.7h6.854v11.7h14.15v5.76h-14.15v18.56q0 3.208 0.1458 5.031 0.1458 1.786 1.021 3.354 0.8021 1.458 2.188 2.151 1.422 0.6562 4.302 0.6562 1.677 0 3.5-0.474 1.823-0.5104 2.625-0.8385h0.3646zm39.92 0.3646h-6.818v-4.339q-0.9114 0.6198-2.479 1.75-1.531 1.094-2.99 1.75-1.714 0.8385-3.938 1.385-2.224 0.5833-5.214 0.5833-5.505 0-9.333-3.646-3.828-3.646-3.828-9.297 0-4.63 1.969-7.474 2.005-2.88 5.688-4.521 3.719-1.641 8.932-2.224 5.214-0.5833 11.19-0.875v-1.057q0-2.333-0.8385-3.865-0.8021-1.531-2.333-2.406-1.458-0.8385-3.5-1.13-2.042-0.2917-4.266-0.2917-2.698 0-6.016 0.7292-3.318 0.6927-6.854 2.042h-0.3646v-6.964q2.005-0.5469 5.797-1.203 3.792-0.6562 7.474-0.6562 4.302 0 7.474 0.7292 3.208 0.6927 5.542 2.406 2.297 1.677 3.5 4.339t1.203 6.599zm-6.818-10.03v-11.34q-3.135 0.1823-7.401 0.5469-4.229 0.3646-6.708 1.057-2.953 0.8386-4.776 2.625-1.823 1.75-1.823 4.849 0 3.5 2.115 5.286 2.115 1.75 6.453 1.75 3.609 0 6.599-1.385 2.99-1.422 5.542-3.391zm45.43-23.22h-0.3646q-1.531-0.3646-2.99-0.5104-1.422-0.1823-3.391-0.1823-3.172 0-6.125 1.422-2.953 1.385-5.688 3.609v28.91h-6.854v-40.72h6.854v6.016q4.083-3.281 7.182-4.63 3.135-1.385 6.38-1.385 1.786 0 2.589 0.1094 0.8021 0.0729 2.406 0.3281zm27.6 32.89q-1.932 0.5104-4.229 0.8385-2.26 0.3281-4.047 0.3281-6.234 0-9.479-3.354-3.245-3.354-3.245-10.76v-21.66h-4.63v-5.76h4.63v-11.7h6.854v11.7h14.15v5.76h-14.15v18.56q0 3.208 0.1458 5.031 0.1458 1.786 1.021 3.354 0.8021 1.458 2.188 2.151 1.422 0.6562 4.302 0.6562 1.677 0 3.5-0.474 1.823-0.5104 2.625-0.8385h0.3646z" fill="#ccc" style="white-space:pre"/>
  </g>
  <g transform="translate(110.9 396)" fill-rule="evenodd">
   <path d="m92.86 200.9h151.4c11.87 0 21.43 9.557 21.43 21.43v140c0 11.87-9.557 21.43-21.43 21.43h-151.4c-11.87 0-21.43-9.557-21.43-21.43v-140c0-11.87 9.557-21.43 21.43-21.43z" fill="url(#linearGradient2905)" stroke="#8d8d8d" stroke-width="1px"/>
   <path d="m105 213.1h125.7c9.934 0 17.93 7.998 17.93 17.93v117.2c0 9.934-7.998 17.93-17.93 17.93h-125.7c-9.934 0-17.93-7.998-17.93-17.93v-117.2c0-9.934 7.998-17.93 17.93-17.93z" fill="url(#linearGradient2907)" stroke="#f8f8f8" stroke-width=".8343px"/>
  </g>
  <path transform="translate(176.3 570.5)" d="m150.4 76.42-20.16 77.55h-11.61l-16.3-64.38-15.94 64.38h-11.35l-20.52-77.55h10.57l16.3 64.48 16.04-64.48h10.47l16.2 65.1 16.2-65.1z" fill="#4d4d4d" style="white-space:pre"/>
  <g transform="translate(110.9 584)" fill-rule="evenodd">
   <path d="m92.86 200.9h151.4c11.87 0 21.43 9.557 21.43 21.43v140c0 11.87-9.557 21.43-21.43 21.43h-151.4c-11.87 0-21.43-9.557-21.43-21.43v-140c0-11.87 9.557-21.43 21.43-21.43z" fill="url(#linearGradient12)" stroke="#8d8d8d" stroke-width="1px"/>
   <path d="m105 213.1h125.7c9.934 0 17.93 7.998 17.93 17.93v117.2c0 9.934-7.998 17.93-17.93 17.93h-125.7c-9.934 0-17.93-7.998-17.93-17.93v-117.2c0-9.934 7.998-17.93 17.93-17.93z" fill="url(#linearGradient13)" stroke="#f8f8f8" stroke-width=".8343px"/>
  </g>
  <path transform="translate(192.1 758.5)" d="m116.5 131.8q0 4.531-2.135 8.958-2.083 4.427-5.885 7.5-4.167 3.333-9.74 5.208-5.521 1.875-13.33 1.875-8.385 0-15.1-1.563-6.667-1.562-13.59-4.635v-12.92h0.7292q5.885 4.896 13.59 7.552 7.708 2.656 14.48 2.656 9.583 0 14.9-3.594 5.365-3.594 5.365-9.583 0-5.156-2.552-7.604-2.5-2.448-7.656-3.802-3.906-1.042-8.49-1.719-4.531-0.6771-9.635-1.719-10.31-2.188-15.31-7.448-4.948-5.313-4.948-13.8 0-9.74 8.229-15.94 8.229-6.25 20.89-6.25 8.177 0 15 1.563 6.823 1.563 12.08 3.854v12.19h-0.7292q-4.427-3.75-11.67-6.198-7.188-2.5-14.74-2.5-8.281 0-13.33 3.438-5 3.438-5 8.854 0 4.844 2.5 7.604 2.5 2.76 8.802 4.219 3.333 0.7292 9.479 1.771 6.146 1.042 10.42 2.135 8.646 2.292 13.02 6.927t4.375 12.97z" fill="#4d4d4d" style="white-space:pre"/>
  <g transform="matrix(1.741 0 0 .9992 -14.02 793.3)" fill-rule="evenodd">
   <path d="m92.86 200.9h151.4c11.87 0 21.43 9.557 21.43 21.43v140c0 11.87-9.557 21.43-21.43 21.43h-151.4c-11.87 0-21.43-9.557-21.43-21.43v-140c0-11.87 9.557-21.43 21.43-21.43z" fill="url(#linearGradient2905)" stroke="#8d8d8d" stroke-width="1px"/>
   <path d="m100.9 215.8h135.6c9.934 0 17.93 7.998 17.93 17.93v114.2c0 9.934-7.998 17.93-17.93 17.93h-135.6c-9.934 0-17.93-7.998-17.93-17.93v-114.2c0-9.934 7.998-17.93 17.93-17.93z" fill="url(#linearGradient2907)" stroke="#f8f8f8" stroke-width=".8343px"/>
  </g>
  <path transform="translate(78.46 756.9)" d="m94.12 304.4q0 2.891-1.094 5.104-1.094 2.214-2.943 3.646-2.187 1.719-4.818 2.448-2.604 0.7292-6.641 0.7292h-13.75v-38.78h11.48q4.245 0 6.354 0.3125t4.036 1.302q2.135 1.12 3.099 2.891 0.9635 1.745 0.9635 4.193 0 2.76-1.406 4.714-1.406 1.927-3.75 3.099v0.2083q3.932 0.8073 6.198 3.464 2.266 2.63 2.266 6.667zm-8.672-17.47q0-1.406-0.4687-2.37-0.4688-0.9635-1.51-1.562-1.224-0.7031-2.969-0.8594-1.745-0.1823-4.323-0.1823h-6.146v11.2h6.667q2.422 0 3.854-0.2344 1.432-0.2604 2.656-1.042 1.224-0.7812 1.719-2.005 0.5208-1.25 0.5208-2.943zm3.307 17.68q0-2.344-0.7031-3.724-0.7031-1.38-2.552-2.344-1.25-0.651-3.047-0.8333-1.771-0.2083-4.323-0.2083h-8.099v14.43h6.823q3.385 0 5.547-0.3385 2.161-0.3646 3.542-1.302 1.458-1.016 2.135-2.318t0.6771-3.359zm34.9 11.72h-4.87v-3.099q-0.651 0.4427-1.771 1.25-1.094 0.7812-2.135 1.25-1.224 0.599-2.812 0.9896-1.589 0.4167-3.724 0.4167-3.932 0-6.667-2.604-2.734-2.604-2.734-6.641 0-3.307 1.406-5.339 1.432-2.057 4.062-3.229 2.656-1.172 6.38-1.589 3.724-0.4167 7.995-0.625v-0.7552q0-1.667-0.599-2.76-0.5729-1.094-1.667-1.719-1.042-0.599-2.5-0.8073t-3.047-0.2083q-1.927 0-4.297 0.5208-2.37 0.4948-4.896 1.458h-0.2604v-4.974q1.432-0.3906 4.141-0.8594t5.339-0.4688q3.073 0 5.339 0.5208 2.292 0.4948 3.958 1.719 1.641 1.198 2.5 3.099 0.8594 1.901 0.8594 4.714zm-4.87-7.161v-8.099q-2.24 0.1302-5.286 0.3906-3.021 0.2604-4.792 0.7552-2.109 0.599-3.411 1.875-1.302 1.25-1.302 3.464 0 2.5 1.51 3.776 1.51 1.25 4.609 1.25 2.578 0 4.714-0.9896 2.135-1.016 3.958-2.422zm35.81 5.339q-2.448 1.172-4.661 1.823-2.188 0.651-4.661 0.651-3.151 0-5.781-0.9115-2.63-0.9375-4.505-2.812-1.901-1.875-2.943-4.74-1.042-2.865-1.042-6.693 0-7.135 3.906-11.2 3.932-4.062 10.36-4.062 2.5 0 4.896 0.7031 2.422 0.7031 4.427 1.719v5.443h-0.2604q-2.24-1.745-4.635-2.682-2.37-0.9375-4.635-0.9375-4.167 0-6.589 2.812-2.396 2.786-2.396 8.203 0 5.26 2.344 8.099 2.37 2.812 6.641 2.812 1.484 0 3.021-0.3906 1.536-0.3906 2.76-1.016 1.068-0.5469 2.005-1.146 0.9375-0.625 1.484-1.068h0.2604zm32.68 1.823h-6.458l-11.67-12.73-3.177 3.021v9.714h-4.896v-40.52h4.896v25.99l14.14-14.56h6.172l-13.52 13.44zm25.94-8.385q0 3.984-3.307 6.536-3.281 2.552-8.984 2.552-3.229 0-5.938-0.7552-2.682-0.7812-4.505-1.693v-5.495h0.2604q2.318 1.745 5.156 2.786 2.839 1.016 5.443 1.016 3.229 0 5.052-1.042 1.823-1.042 1.823-3.281 0-1.719-0.9896-2.604-0.9896-0.8854-3.802-1.51-1.042-0.2344-2.734-0.5469-1.667-0.3125-3.047-0.6771-3.828-1.016-5.443-2.969-1.589-1.979-1.589-4.844 0-1.797 0.7292-3.385 0.7552-1.589 2.266-2.839 1.458-1.224 3.698-1.927 2.266-0.7292 5.052-0.7292 2.604 0 5.26 0.651 2.682 0.625 4.453 1.536v5.234h-0.2604q-1.875-1.38-4.557-2.318-2.682-0.9636-5.26-0.9636-2.682 0-4.531 1.042-1.849 1.016-1.849 3.047 0 1.797 1.12 2.708 1.094 0.9114 3.542 1.484 1.354 0.3125 3.021 0.625 1.693 0.3125 2.812 0.5729 3.411 0.7812 5.26 2.682 1.849 1.927 1.849 5.104zm32.6-6.51q0 3.542-1.016 6.484-1.016 2.917-2.865 4.948-1.719 1.927-4.062 2.995-2.318 1.042-4.922 1.042-2.266 0-4.115-0.4948-1.823-0.4948-3.724-1.536v12.19h-4.896v-39.82h4.896v3.047q1.953-1.641 4.375-2.734 2.448-1.12 5.208-1.12 5.26 0 8.177 3.984 2.943 3.958 2.943 11.02zm-5.052 0.1302q0-5.26-1.797-7.865-1.797-2.604-5.521-2.604-2.109 0-4.245 0.9115-2.135 0.9115-4.089 2.396v16.48q2.083 0.9375 3.568 1.276 1.51 0.3385 3.411 0.3385 4.089 0 6.38-2.76 2.292-2.76 2.292-8.177zm35.29 14.77h-4.87v-3.099q-0.651 0.4427-1.771 1.25-1.094 0.7812-2.135 1.25-1.224 0.599-2.812 0.9896-1.589 0.4167-3.724 0.4167-3.932 0-6.667-2.604-2.734-2.604-2.734-6.641 0-3.307 1.406-5.339 1.432-2.057 4.062-3.229 2.656-1.172 6.38-1.589 3.724-0.4167 7.995-0.625v-0.7552q0-1.667-0.599-2.76-0.5729-1.094-1.667-1.719-1.042-0.599-2.5-0.8073-1.458-0.2083-3.047-0.2083-1.927 0-4.297 0.5208-2.37 0.4948-4.896 1.458h-0.2604v-4.974q1.432-0.3906 4.141-0.8594 2.708-0.4688 5.339-0.4688 3.073 0 5.339 0.5208 2.292 0.4948 3.958 1.719 1.641 1.198 2.5 3.099 0.8594 1.901 0.8594 4.714zm-4.87-7.161v-8.099q-2.24 0.1302-5.286 0.3906-3.021 0.2604-4.792 0.7552-2.109 0.599-3.411 1.875-1.302 1.25-1.302 3.464 0 2.5 1.51 3.776 1.51 1.25 4.609 1.25 2.578 0 4.714-0.9896 2.135-1.016 3.958-2.422zm35.81 5.339q-2.448 1.172-4.661 1.823-2.188 0.651-4.661 0.651-3.151 0-5.781-0.9115-2.63-0.9375-4.505-2.812-1.901-1.875-2.943-4.74-1.042-2.865-1.042-6.693 0-7.135 3.906-11.2 3.932-4.062 10.36-4.062 2.5 0 4.896 0.7031 2.422 0.7031 4.427 1.719v5.443h-0.2604q-2.24-1.745-4.635-2.682-2.37-0.9375-4.635-0.9375-4.167 0-6.589 2.812-2.396 2.786-2.396 8.203 0 5.26 2.344 8.099 2.37 2.812 6.641 2.812 1.484 0 3.021-0.3906 1.536-0.3906 2.76-1.016 1.068-0.5469 2.005-1.146 0.9375-0.625 1.484-1.068h0.2604zm30.62-12.21h-21.43q0 2.682 0.8073 4.688 0.8073 1.979 2.214 3.255 1.354 1.25 3.203 1.875 1.875 0.625 4.115 0.625 2.969 0 5.964-1.172 3.021-1.198 4.297-2.344h0.2604v5.339q-2.474 1.042-5.052 1.745-2.578 0.7031-5.417 0.7031-7.24 0-11.3-3.906-4.062-3.932-4.062-11.15 0-7.135 3.88-11.33 3.906-4.193 10.26-4.193 5.885 0 9.062 3.437 3.203 3.438 3.203 9.766zm-4.766-3.75q-0.026-3.854-1.953-5.964-1.901-2.109-5.807-2.109-3.932 0-6.276 2.318-2.318 2.318-2.63 5.755z" fill="#4d4d4d" style="white-space:pre"/>
  <path d="m293.5 1097h-139.9" marker-end="url(#Triangle)" stroke="#4d4d4d" stroke-linejoin="round" stroke-width="2.805"/>
 </g>
 <script id="mesh_polyfill" type="text/javascript">!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();</script>
</svg>
